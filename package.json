{
	"name": "azurerm-vscode-tools",
	"displayName": "Azure Resource Manager (ARM) Tools",
	"description": "Language server, editing tools and snippets for Azure Resource Manager (ARM) template files.",
	"main": "main",
	"scripts": {
		"$lint": "tslint --project tsconfig.json -e src/*.d.ts -t verbose",
		"$lint-fix": "tslint --project tsconfig.json -t verbose --fix",
		"$test.comment": "Runs tests from the webpacked extension. If you want to run tests from the source code directly, run from without vscode.",
		"all": "npm i && npm test && npm run lint",
		"build": "gulp build-grammars && npm run get-language-server && gulp verify-test-uses-extension-bundle && tsc -p ./",
		"build-grammars": "gulp build-grammars",
		"compile": "gulp build-grammars && npm run get-language-server && gulp verify-test-uses-extension-bundle && tsc -watch -p ./",
		"get-language-server": "gulp get-language-server",
		"pretest-dev": "npm run webpack && gulp pretest",
		"pretest-prod": "npm run webpack-prod && gulp pretest",
		"verify-test-uses-extension-bundle": "gulp verify-test-uses-extension-bundle",
		"watch-grammars": "gulp watch-grammars",
		"webpack": "gulp webpack-prod",
		"webpack-dev": "npm run build && gulp webpack-dev",
		"webpack-prod": "npm run build && gulp webpack-prod",
		"webpack-profile": "webpack --profile --json --mode production > webpack-stats.json && echo Use http://webpack.github.io/analyse to analyze the stats"
	},
	"contributes": {
		"commands": [
			{
				"$comment": "============= Developer commands =============",
				"category": "Azure Resource Manager Tools (Developer)",
				"command": "azurerm-vscode-tools.developer.showInsertionContext",
				"title": "Show Insertion Context at current location (for snippet authors)"
			},
			{
				"category": "Azure Resource Manager Tools (Developer)",
				"command": "azurerm-vscode-tools.developer.resetGlobalState",
				"title": "Reset Global State"
			},
			{
				"category": "Azure Resource Manager Tools (Developer)",
				"command": "azurerm-vscode-tools.developer.showAvailableResourceTypesAndVersions",
				"title": "Show Available Resource Types and Versions"
			},
			{
				"$comment": "============= Programmatic =============",
				"$comment2": "Code lens on a parameter definition - navigates to parameter value",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.codeLens.gotoParameterValue",
				"title": "Go to parameter value"
			},
			{
				"$comment2": "Code lens on a linked template - opens the linked template",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.codeLens.openLinkedTemplateFile",
				"title": "Open a linked template file"
			},
			{
				"$comment2": "Code lens on a linked template - reloads the linked template",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.codeLens.reloadLinkedTemplateFile",
				"title": "Reload a linked template file"
			},
			{
				"$comment": "============= Insert Item =============",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.insertItem",
				"icon": {
					"dark": "icons/insertItemDark.svg",
					"light": "icons/insertItemLight.svg"
				},
				"title": "Insert Item..."
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.insertVariable",
				"icon": {
					"dark": "icons/insertItemDark.svg",
					"light": "icons/insertItemLight.svg"
				},
				"title": "Insert Variable..."
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.insertFunction",
				"icon": {
					"dark": "icons/insertItemDark.svg",
					"light": "icons/insertItemLight.svg"
				},
				"title": "Insert Function..."
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.insertResource",
				"icon": {
					"dark": "icons/insertItemDark.svg",
					"light": "icons/insertItemLight.svg"
				},
				"title": "Insert Resource..."
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.insertParameter",
				"icon": {
					"dark": "icons/insertItemDark.svg",
					"light": "icons/insertItemLight.svg"
				},
				"title": "Insert Parameter..."
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.insertOutput",
				"icon": {
					"dark": "icons/insertItemDark.svg",
					"light": "icons/insertItemLight.svg"
				},
				"title": "Insert Output..."
			},
			{
				"$comment": "============= Template sorting =============",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.sortTemplate",
				"icon": {
					"dark": "icons/sortDark.svg",
					"light": "icons/sortLight.svg"
				},
				"title": "Sort Template..."
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.sortFunctions",
				"icon": {
					"dark": "icons/sortDark.svg",
					"light": "icons/sortLight.svg"
				},
				"title": "Sort Functions"
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.sortOutputs",
				"icon": {
					"dark": "icons/sortDark.svg",
					"light": "icons/sortLight.svg"
				},
				"title": "Sort Outputs"
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.sortParameters",
				"icon": {
					"dark": "icons/sortDark.svg",
					"light": "icons/sortLight.svg"
				},
				"title": "Sort Parameters"
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.sortResources",
				"icon": {
					"dark": "icons/sortDark.svg",
					"light": "icons/sortLight.svg"
				},
				"title": "Sort Resources"
			},
			{
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.sortVariables",
				"icon": {
					"dark": "icons/sortDark.svg",
					"light": "icons/sortLight.svg"
				},
				"title": "Sort Variables"
			},
			{
				"$comment": "============= Template file commands =============",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.selectParameterFile",
				"enablement": "editorLangId==arm-template",
				"title": "Select/Create Parameter File..."
			},
			{
				"$enablement.comment": "Shows up when it's a template file, but only enabled if there is an associated param file",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.openParameterFile",
				"enablement": "azurerm-vscode-tools-hasParamFile",
				"title": "Open Parameter File"
			},
			{
				"$comment": "============= Parameter file commands =============",
				"$enablement.comment": "Shows up when it's a param file, but only enabled if there is an associated template file",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.openTemplateFile",
				"enablement": "azurerm-vscode-tools-hasTemplateFile",
				"title": "Open Template File"
			},
			{
				"$enablement.comment": "Shows up when it's a param file, but only enabled if there is an associated template file",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.codeAction.addAllMissingParameters",
				"enablement": "azurerm-vscode-tools-hasTemplateFile",
				"title": "Add All Missing Parameters"
			},
			{
				"$enablement.comment": "Shows up when it's a param file, but only enabled if there is an associated template file",
				"category": "Azure Resource Manager Tools",
				"command": "azurerm-vscode-tools.codeAction.addMissingRequiredParameters",
				"enablement": "azurerm-vscode-tools-hasTemplateFile",
				"title": "Add Missing Required Parameters"
			}
		],
		"configuration": {
			"properties": {
				"azureResourceManagerTools.autoDetectJsonTemplates": {
					"default": true,
					"description": "Enables auto-detection of deployment template files with the extension *.json or *.jsonc. If set to true (default), the editor language will automatically be set to Azure Resource Manager Template for any *.json/*.jsonc file which contains an appropriate Azure Resource Manager Template schema.",
					"type": "boolean"
				},
				"azureResourceManagerTools.checkForLatestSchema": {
					"default": true,
					"description": "Check if the schema for deployment templates is using an out-of-date version and suggest updating",
					"type": "boolean"
				},
				"azureResourceManagerTools.checkForMatchingParameterFiles": {
					"default": true,
					"description": "Check if an opened template file has a matching params file and ask to use it",
					"type": "boolean"
				},
				"azureResourceManagerTools.codelens.enable": {
					"default": true,
					"description": "Enables or disables all Code Lens features",
					"type": "boolean"
				},
				"azureResourceManagerTools.codelens.parameters": {
					"default": true,
					"description": "Enables Code Lens for parameter definitions and values",
					"type": "boolean"
				},
				"azureResourceManagerTools.codelens.resourceChildren": {
					"default": true,
					"description": "Enables Code Lens that displays the parent and children of each resource",
					"type": "boolean"
				},
				"azureResourceManagerTools.languageServer.dotnetExePath": {
					"description": "(Requires restart) If specified, overrides the use of a local version of dotnet core the extension and instead points to another installed version of dotnet.exe (must match the version needed by the extension)",
					"type": "string"
				},
				"azureResourceManagerTools.languageServer.path": {
					"description": "Override the default location of the language server assembly folder or file path (requires restart)",
					"type": "string"
				},
				"azureResourceManagerTools.languageServer.traceLevel": {
					"default": "Warning",
					"description": "Sets the trace (log) level in the Output window for the Azure Template Language Server (requires restart)",
					"enum": [
						"Trace",
						"Debug",
						"Information",
						"Warning",
						"Error",
						"Critical",
						"None"
					],
					"type": "string"
				},
				"azureResourceManagerTools.languageServer.waitForDebugger": {
					"default": false,
					"description": "If set to true, the language server process will wait in startup until a debugger is attached, and then will force a break (requires restart)",
					"type": "boolean"
				},
				"azureResourceManagerTools.parameterFiles": {
					"additionalProperties": {
						"type": "string"
					},
					"default": {},
					"description": "Specifies which parameter file to use for each given template file. Specifying the parameter file allows more thorough validation.",
					"type": "object"
				}
			},
			"title": "Azure Resource Manager Tools",
			"type": "object"
		},
		"grammars": [
			{
				"language": "arm-template",
				"path": "dist/grammars/JSONC.arm.tmLanguage.json",
				"scopeName": "source.json.arm-template"
			},
			{
				"path": "dist/grammars/arm-expression-string.tmLanguage.json",
				"scopeName": "source.tle.arm-template"
			}
		],
		"languages": [
			{
				"aliases": [
					"Azure Resource Manager Template"
				],
				"configuration": "dist/grammars/jsonc.arm.language-configuration.json",
				"id": "arm-template",
				"mimetypes": []
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "azurerm-vscode-tools.sortFunctions",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.sortOutputs",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.sortParameters",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.sortResources",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.sortVariables",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.insertParameter",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.insertVariable",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.insertOutput",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.insertFunction",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.insertResource",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.openTemplateFile",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.codeLens.openLinkedTemplateFile",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.codeLens.reloadLinkedTemplateFile",
					"when": "never"
				},
				{
					"command": "azurerm-vscode-tools.codeLens.gotoParameterValue",
					"when": "never"
				}
			],
			"editor/context": [
				{
					"$comment": "============= Template file commands =============",
					"command": "azurerm-vscode-tools.selectParameterFile",
					"group": "zzz_arm-template@1",
					"when": "editorLangId==arm-template"
				},
				{
					"$when.comment": "Shows up when it's a template file, but only enabled if there is an associated param file",
					"command": "azurerm-vscode-tools.openParameterFile",
					"group": "zzz_arm-template@2",
					"when": "editorLangId==arm-template"
				},
				{
					"command": "azurerm-vscode-tools.sortTemplate",
					"group": "zzz_arm-template@3",
					"when": "editorLangId==arm-template"
				},
				{
					"command": "azurerm-vscode-tools.insertItem",
					"group": "zzz_arm-template@4",
					"when": "editorLangId==arm-template"
				},
				{
					"$comment": "============= Parameter file commands =============",
					"$when.comment": "Shows up when it's a param file, but only enabled if there is an associated template file",
					"command": "azurerm-vscode-tools.openTemplateFile",
					"group": "zzz_arm-params@2",
					"when": "azurerm-vscode-tools-isParamFile"
				}
			],
			"editor/title": [
				{
					"$comment": "============= Template file commands =============",
					"command": "azurerm-vscode-tools.selectParameterFile",
					"group": "zzz_arm-template@1",
					"when": "editorLangId==arm-template"
				},
				{
					"$when.comment": "Shows up when it's a template file, but only enabled if there is an associated param file",
					"command": "azurerm-vscode-tools.openParameterFile",
					"group": "zzz_arm-template@2",
					"when": "editorLangId==arm-template"
				},
				{
					"$comment": "============= Parameter file commands =============",
					"$when.comment": "Shows up when it's a param file, but only enabled if there is an associated template file",
					"command": "azurerm-vscode-tools.openTemplateFile",
					"group": "zzz_arm-params@2",
					"when": "azurerm-vscode-tools-isParamFile"
				}
			],
			"editor/title/context": [
				{
					"$comment": "============= Template file commands =============",
					"command": "azurerm-vscode-tools.selectParameterFile",
					"group": "zzz_arm-template@1",
					"when": "editorLangId==arm-template"
				},
				{
					"$when.comment": "Shows up when it's a template file, but only enabled if there is an associated param file",
					"command": "azurerm-vscode-tools.openParameterFile",
					"group": "zzz_arm-template@2",
					"when": "editorLangId==arm-template"
				},
				{
					"$comment": "============= Parameter file commands =============",
					"$when.comment": "Shows up when it's a param file, but only enabled if there is an associated template file",
					"command": "azurerm-vscode-tools.openTemplateFile",
					"group": "zzz_arm-params@2",
					"when": "azurerm-vscode-tools-isParamFile"
				}
			],
			"view/item/context": [
				{
					"$comment": "============= Treeview commands =============",
					"command": "azurerm-vscode-tools.sortFunctions",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /functions@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.sortOutputs",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /outputs@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.sortParameters",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /parameters@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.sortResources",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /resources@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.sortVariables",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /variables@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.insertParameter",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /parameters@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.insertVariable",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /variables@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.insertOutput",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /outputs@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.insertFunction",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /functions@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.insertResource",
					"group": "arm-template",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /resources@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.sortFunctions",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem == functions@1"
				},
				{
					"command": "azurerm-vscode-tools.sortOutputs",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem == outputs@1"
				},
				{
					"command": "azurerm-vscode-tools.sortParameters",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem == parameters@1"
				},
				{
					"command": "azurerm-vscode-tools.sortResources",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem == resources@1"
				},
				{
					"command": "azurerm-vscode-tools.sortVariables",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem == variables@1"
				},
				{
					"command": "azurerm-vscode-tools.insertParameter",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /parameters@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.insertVariable",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /variables@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.insertOutput",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /outputs@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.insertFunction",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /functions@\\d/"
				},
				{
					"command": "azurerm-vscode-tools.insertResource",
					"group": "inline",
					"when": "view == azurerm-vscode-tools.template-outline && viewItem =~ /resources@\\d/"
				}
			],
			"view/title": [
				{
					"command": "azurerm-vscode-tools.insertItem",
					"group": "navigation@1",
					"when": "view == azurerm-vscode-tools.template-outline"
				},
				{
					"command": "azurerm-vscode-tools.sortTemplate",
					"group": "navigation@2",
					"when": "view == azurerm-vscode-tools.template-outline"
				}
			]
		},
		"views": {
			"explorer": [
				{
					"id": "azurerm-vscode-tools.template-outline",
					"name": "ARM Template Outline",
					"when": "showAzureTemplateView"
				}
			]
		}
	},
	"activationEvents": [
		"onLanguage:json",
		"onLanguage:jsonc",
		"onCommand:azurerm-vscode-tools.codeAction.extractParameter",
		"onCommand:azurerm-vscode-tools.codeAction.extractVariable"
	],
	"config": {
		"$comment.ARM_LANGUAGE_SERVER_NUGET_VERSION": "E.g., 3.0.0-preview.24163.1, or leave blank to pick up the latest",
		"ARM_LANGUAGE_SERVER_NUGET_VERSION": ""
	},
	"dependencies": {
		"fs-extra": "11.3.0",
		"moment": "2.30.1",
		"strip-json-comments": "5.0.1"
	},
	"devDependencies": {
		"@types/decompress": "4.2.7",
		"@types/estree": "1.0.6",
		"@types/fs-extra": "11.0.4",
		"@types/node": "22.13.9",
		"@types/recursive-readdir": "2.2.4",
		"@types/rimraf": "4.0.5",
		"@types/shelljs": "0.8.15",
		"@types/vinyl": "2.0.12",
		"chokidar": "4.0.3",
		"crypto": "1.0.1",
		"glob": "11.0.1",
		"glob-promise": "6.0.7",
		"nuget": "2.0.2",
		"recursive-readdir": "2.2.3",
		"rimraf": "6.0.1",
		"shelljs": "0.8.5",
		"source-map-support": "0.5.21"
	},
	"extensionDependencies": [
		"ms-dotnettools.vscode-dotnet-runtime"
	],
	"icon": "AzureRMTools128x128.png",
	"galleryBanner": {
		"color": "E7F1FA",
		"theme": "light"
	},
	"preview": true,
	"$devDependencies.comment": "@types/estree is to fix eslint issue, see https://stackoverflow.com/questions/67806963/types-eslint-error-chainexpression-and-importexpression-members-of-estree-not#:~:text=Solution%20to%20this%20problem%20is%3A%20npm%20install%20--save-dev,again%3A%20npm%20install%20Errors%20should%20be%20gone%20now.",
	"aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
	"capabilities": {
		"virtualWorkspaces": {
			"supported": false
		}
	}
}
